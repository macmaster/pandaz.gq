{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","About","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","props","a","createElement","title","to","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","SEO","description","lang","meta","_ref$keywords","keywords","site","_public_static_d_1667383364_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","metaProp","name","content","property","author","join","concat","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","arrayOf","defaultProps","Header","classes","siteTitle","react_default","className","header","gatsby_browser_entry","style","margin","withStyles","theme","display","justifyContent","maxWidth","width","padding","spacing","unit","textDecoration","backgroundImage","textShadow","Layout","children","_4130953669","year","Date","getFullYear","Fragment","components_Header","root","node"],"mappings":"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","file":"component---src-pages-about-js-7b188632403277279dfa.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nexport default function About(props) {\n  return (\n    <Layout>\n      <SEO title=\"About\" />\n      <p>Wow, very legal and cool...</p>\n      <p><Link to=\"/\">Back to Buffet</Link></p>\n    </Layout>\n  );\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction SEO({ description, lang, meta, keywords = [], title }) {\n  const { site } = useStaticQuery(query);\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  const metaProp = [\n    {\n      name: \"description\",\n      content: metaDescription,\n    }, {\n      property: \"og:title\",\n      content: title,\n    }, {\n      property: \"og:description\",\n      content: metaDescription,\n    }, {\n      property: \"og:type\",\n      content: \"website\",\n    }, {\n      name: \"twitter:card\",\n      content: \"summary\",\n    }, {\n      name: \"twitter:creator\",\n      content: site.siteMetadata.author,\n    }, {\n      name: \"twitter:title\",\n      content: title,\n    }, {\n      name: \"twitter:description\",\n      content: metaDescription,\n    }, {\n      name: \"keywords\",\n      content: keywords.join(\", \"),\n    }\n  ].concat(meta);\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      meta={metaProp}\n    />\n  )\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n  description: '',\n};\n\nexport default SEO;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport withStyles from 'react-jss';\n\nfunction Header({ classes, siteTitle }) {\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\" className={classes.title}>\n        <h3 style={{ margin: 'auto' }}>Pandas</h3>\n      </Link>\n      <Link to=\"/about\">About</Link>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default withStyles(theme => ({\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    maxWidth: theme.content.width,\n    padding: theme.spacing.unit,\n    margin: 'auto',\n  },\n  title: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    backgroundImage: 'none',\n    textShadow: 'none',\n  },\n}))(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport withStyles from 'react-jss';\n\nimport Header from './Header';\n\nconst query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nfunction Layout({ classes, children }) {\n  const { site } = useStaticQuery(query);\n  const year = new Date().getFullYear();\n  return (\n    <React.Fragment>\n      <Header siteTitle={site.siteMetadata.title} />\n      <div className={classes.root}>\n        <main>{children}</main>\n        <footer>\n          © {year}, Ronald Macmaster\n        </footer>\n      </div>\n    </React.Fragment>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default withStyles(theme => ({\n  root: {\n    maxWidth: theme.content.width,\n    padding: theme.spacing.unit,\n    margin: 'auto',\n  },\n}))(Layout);\n"],"sourceRoot":""}